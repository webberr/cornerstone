server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name CORNERSTONE_WEBSITE_URL www.CORNERSTONE_WEBSITE_URL;
    return 301 https://CORNERSTONE_WEBSITE_URL$request_uri;
}
server {

    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    ssl on;

    ssl_certificate /etc/letsencrypt/live/CORNERSTONE_WEBSITE_URL/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/CORNERSTONE_WEBSITE_URL/privkey.pem;

    # See https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # disable HSTS header for now
    #add_header Strict-Transport-Secuirty "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    root /home/CORNERSTONE_SYSTEM_USER/app/cornerstone-ui/dist/;

    index index.html;

    server_name CORNERSTONE_WEBSITE_URL www.CORNERSTONE_WEBSITE_URL;

    location ~ /.well-known {
        allow all;
    }

    location / {
        #try_files $uri $uri/ =404;
        proxy_pass http://localhost:4200;
        proxy_set_header Host $host;
    }
}